{"ast":null,"code":"var _jsxFileName = \"/Users/saidazghal/Documents/Re\\u0301visionLaCapsule/Week5/MyMoviz/mymovizFrontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Nav, NavLink, NavItem, Button, Popover, PopoverHeader, PopoverBody, ListGroup, ListGroupItem, ListGroupItemText } from \"reactstrap\";\nimport Movie from \"./components/Movie\";\n\nfunction App() {\n  const [moviesCount, setMoviesCount] = useState(0);\n  const [moviesWishList, setMoviesWishList] = useState([]);\n  const [movieList, setMovieList] = useState([]);\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(async () => {\n    const response = await fetch(\"/new-movies\");\n    const jsonResponse = await response.json(); //console.log(jsonResponse);\n\n    setMovieList(jsonResponse.movies);\n    const responseWhish = await fetch(\"/whishlist-movie\");\n    const jsonResponseWish = await responseWhish.json(); //console.log(jsonResponseWish);\n\n    const wishlistFromDB = jsonResponseWish.movies.map((movie, i) => {\n      return {\n        name: movie.movieName,\n        img: movie.movieImg\n      };\n    });\n    setMoviesWishList(wishlistFromDB);\n    setMoviesCount(jsonResponseWish.movies.length);\n  }, []);\n\n  var handleClickAddMovie = async (name, img) => {\n    setMoviesCount(moviesCount + 1);\n    setMoviesWishList([...moviesWishList, {\n      name: name,\n      img: img\n    }]);\n    const response = await fetch(\"/whishlist-movie\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: `name=${name}&img=${img}`\n    });\n  };\n\n  var handleClickDeleteMovie = async name => {\n    setMoviesCount(moviesCount - 1);\n    setMoviesWishList(moviesWishList.filter(object => object.name != name));\n    const response = await fetch(`/whishlist-movie/${name}`, {\n      method: \"DELETE\"\n    });\n  };\n\n  let cardWish = moviesWishList.map((movie, i) => {\n    return React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ListGroupItemText, {\n      onClick: () => {\n        handleClickDeleteMovie(movie.name);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      width: \"25%\",\n      src: movie.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \" \", movie.name));\n  }); // let moviesData = [\n  //   {\n  //     name: \"Star Wars: L'ascension de Skywalker\",\n  //     desc:\n  //       \"La conclusion de la saga Skywalker. De nouvelles légendes vont naître dans cette...\",\n  //     img: \"/starwars.jpg\",\n  //     note: 6.7,\n  //     vote: 5\n  //   },\n  //   {\n  //     name: \"Maléfique: Le pouvoir du mal\",\n  //     desc:\n  //       \"Plusieurs années, après avoir découvert pourquoi la plus célèbre méchante Dismey avait un coeur...\",\n  //     img: \"/maleficent.jpg\",\n  //     note: 8.2,\n  //     vote: 3\n  //   },\n  //   {\n  //     name: \"Jumanji: The Next Level\",\n  //     desc:\n  //       \"L'équipe est de retour mais le jeu a changé. Alors qu'ils retournent dans Jumanji pour secourir... \",\n  //     img: \"/jumanji.jpg\",\n  //     note: 4,\n  //     vote: 5\n  //   },\n  //   {\n  //     name: \"Once Upon a time...in Hollywood\",\n  //     desc:\n  //       \"En 1969, Rick Dalton -Star déclinante de série télévisée de western- et Cliff Booth...\",\n  //     img: \"/once_upon.jpg\",\n  //     note: 6,\n  //     vote: 7\n  //   },\n  //   {\n  //     name: \"La Reine des neiges 2\",\n  //     desc:\n  //       \"Ana, Elsa, Kristoff, Olaf et Sven voyagent bien au-delà des portes d'Arendelle à la recherche de réponses...\",\n  //     img: \"/frozen.jpg\",\n  //     note: 7,\n  //     vote: 9\n  //   },\n  //   {\n  //     name: \"Terminator: Dark Fate\",\n  //     desc:\n  //       \"De nos jours à Mexico, Dani Ramos, 21 ans, travaille sur une chaîne de montage dans une usine automobiles...\",\n  //     img: \"/terminator.jpg\",\n  //     note: 6.1,\n  //     vote: 1\n  //   }\n  // ];\n\n  let movieListItems = movieList.map((movie, i) => {\n    var result = moviesWishList.find(element => element.name == movie.title);\n    var isSee = false;\n\n    if (result != undefined) {\n      isSee = true;\n    }\n\n    var result = movie.overview;\n\n    if (result.length > 80) {\n      result = result.slice(0, 8) + \"...\";\n    }\n\n    var urlImage = \"/generique.jpg\";\n\n    if (movie.backdrop_path != null) {\n      urlImage = `https://image.tmdb.org/t/p/w500/` + movie.backdrop_path;\n    }\n\n    return React.createElement(Movie, {\n      key: i,\n      movieSee: isSee,\n      handleClickDeleteMovieParent: handleClickDeleteMovie,\n      handleClickAddMovieParent: handleClickAddMovie,\n      movieName: movie.title,\n      movieDesc: result,\n      movieImg: urlImage,\n      globalRating: movie.popularity,\n      globalCountRating: movie.vote_count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#232528\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"./logo.png\",\n    width: \"30\",\n    height: \"30\",\n    className: \"d-inline-block align-top\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Last Releases\")), React.createElement(NavItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Button, {\n    id: \"Popover1\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, moviesCount, \" films\"), React.createElement(Popover, {\n    placement: \"bottom\",\n    isOpen: popoverOpen,\n    target: \"Popover1\",\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(PopoverHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Wishlist\"), React.createElement(PopoverBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, cardWish)))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, movieListItems)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/saidazghal/Documents/RévisionLaCapsule/Week5/MyMoviz/mymovizFrontend/src/App.js"],"names":["React","useState","useEffect","Container","Row","Nav","NavLink","NavItem","Button","Popover","PopoverHeader","PopoverBody","ListGroup","ListGroupItem","ListGroupItemText","Movie","App","moviesCount","setMoviesCount","moviesWishList","setMoviesWishList","movieList","setMovieList","popoverOpen","setPopoverOpen","toggle","response","fetch","jsonResponse","json","movies","responseWhish","jsonResponseWish","wishlistFromDB","map","movie","i","name","movieName","img","movieImg","length","handleClickAddMovie","method","headers","body","handleClickDeleteMovie","filter","object","cardWish","movieListItems","result","find","element","title","isSee","undefined","overview","slice","urlImage","backdrop_path","popularity","vote_count","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  Container,\n  Row,\n  Nav,\n  NavLink,\n  NavItem,\n  Button,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemText\n} from \"reactstrap\";\n\nimport Movie from \"./components/Movie\";\n\nfunction App() {\n  const [moviesCount, setMoviesCount] = useState(0);\n\n  const [moviesWishList, setMoviesWishList] = useState([]);\n\n  const [movieList, setMovieList] = useState([]);\n\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => setPopoverOpen(!popoverOpen);\n\n  useEffect(async () => {\n    const response = await fetch(\"/new-movies\");\n    const jsonResponse = await response.json();\n    //console.log(jsonResponse);\n    setMovieList(jsonResponse.movies);\n\n    const responseWhish = await fetch(\"/whishlist-movie\");\n    const jsonResponseWish = await responseWhish.json();\n    //console.log(jsonResponseWish);\n\n    const wishlistFromDB = jsonResponseWish.movies.map((movie, i) => {\n      return { name: movie.movieName, img: movie.movieImg };\n    });\n    setMoviesWishList(wishlistFromDB);\n    setMoviesCount(jsonResponseWish.movies.length);\n  }, []);\n\n  var handleClickAddMovie = async (name, img) => {\n    setMoviesCount(moviesCount + 1);\n    setMoviesWishList([...moviesWishList, { name: name, img: img }]);\n\n    const response = await fetch(\"/whishlist-movie\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: `name=${name}&img=${img}`\n    });\n  };\n\n  var handleClickDeleteMovie = async name => {\n    setMoviesCount(moviesCount - 1);\n    setMoviesWishList(moviesWishList.filter(object => object.name != name));\n\n    const response = await fetch(`/whishlist-movie/${name}`, {\n      method: \"DELETE\"\n    });\n  };\n\n  let cardWish = moviesWishList.map((movie, i) => {\n    return (\n      <ListGroupItem>\n        <ListGroupItemText\n          onClick={() => {\n            handleClickDeleteMovie(movie.name);\n          }}\n        >\n          <img width=\"25%\" src={movie.img} /> {movie.name}\n        </ListGroupItemText>\n      </ListGroupItem>\n    );\n  });\n\n  // let moviesData = [\n  //   {\n  //     name: \"Star Wars: L'ascension de Skywalker\",\n  //     desc:\n  //       \"La conclusion de la saga Skywalker. De nouvelles légendes vont naître dans cette...\",\n  //     img: \"/starwars.jpg\",\n  //     note: 6.7,\n  //     vote: 5\n  //   },\n  //   {\n  //     name: \"Maléfique: Le pouvoir du mal\",\n  //     desc:\n  //       \"Plusieurs années, après avoir découvert pourquoi la plus célèbre méchante Dismey avait un coeur...\",\n  //     img: \"/maleficent.jpg\",\n  //     note: 8.2,\n  //     vote: 3\n  //   },\n  //   {\n  //     name: \"Jumanji: The Next Level\",\n  //     desc:\n  //       \"L'équipe est de retour mais le jeu a changé. Alors qu'ils retournent dans Jumanji pour secourir... \",\n  //     img: \"/jumanji.jpg\",\n  //     note: 4,\n  //     vote: 5\n  //   },\n  //   {\n  //     name: \"Once Upon a time...in Hollywood\",\n  //     desc:\n  //       \"En 1969, Rick Dalton -Star déclinante de série télévisée de western- et Cliff Booth...\",\n  //     img: \"/once_upon.jpg\",\n  //     note: 6,\n  //     vote: 7\n  //   },\n  //   {\n  //     name: \"La Reine des neiges 2\",\n  //     desc:\n  //       \"Ana, Elsa, Kristoff, Olaf et Sven voyagent bien au-delà des portes d'Arendelle à la recherche de réponses...\",\n  //     img: \"/frozen.jpg\",\n  //     note: 7,\n  //     vote: 9\n  //   },\n  //   {\n  //     name: \"Terminator: Dark Fate\",\n  //     desc:\n  //       \"De nos jours à Mexico, Dani Ramos, 21 ans, travaille sur une chaîne de montage dans une usine automobiles...\",\n  //     img: \"/terminator.jpg\",\n  //     note: 6.1,\n  //     vote: 1\n  //   }\n  // ];\n\n  let movieListItems = movieList.map((movie, i) => {\n    var result = moviesWishList.find(element => element.name == movie.title);\n    var isSee = false;\n    if (result != undefined) {\n      isSee = true;\n    }\n\n    var result = movie.overview;\n    if (result.length > 80) {\n      result = result.slice(0, 8) + \"...\";\n    }\n\n    var urlImage = \"/generique.jpg\";\n    if (movie.backdrop_path != null) {\n      urlImage = `https://image.tmdb.org/t/p/w500/` + movie.backdrop_path;\n    }\n\n    return (\n      <Movie\n        key={i}\n        movieSee={isSee}\n        handleClickDeleteMovieParent={handleClickDeleteMovie}\n        handleClickAddMovieParent={handleClickAddMovie}\n        movieName={movie.title}\n        movieDesc={result}\n        movieImg={urlImage}\n        globalRating={movie.popularity}\n        globalCountRating={movie.vote_count}\n      />\n    );\n  });\n\n  return (\n    <div style={{ backgroundColor: \"#232528\" }}>\n      <Container>\n        <Nav>\n          <span className=\"navbar-brand\">\n            <img\n              src=\"./logo.png\"\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n              alt=\"logo\"\n            />\n          </span>\n          <NavItem>\n            <NavLink style={{ color: \"white\" }}>Last Releases</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink>\n              <Button id=\"Popover1\" type=\"button\">\n                {moviesCount} films\n              </Button>\n              <Popover\n                placement=\"bottom\"\n                isOpen={popoverOpen}\n                target=\"Popover1\"\n                toggle={toggle}\n              >\n                <PopoverHeader>Wishlist</PopoverHeader>\n                <PopoverBody>\n                  <ListGroup>{cardWish}</ListGroup>\n                </PopoverBody>\n              </Popover>\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <Row>{movieListItems}</Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}